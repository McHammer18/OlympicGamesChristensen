// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicGamesChristensen.Models;

#nullable disable

namespace OlympicGamesChristensen.Migrations
{
    [DbContext(typeof(CountryContext))]
    partial class CountryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OlympicGamesChristensen.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = "in",
                            CategoryName = "Indoor Olympics"
                        },
                        new
                        {
                            CategoryID = "out",
                            CategoryName = "Outdoor Olympics"
                        });
                });

            modelBuilder.Entity("OlympicGamesChristensen.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("CategoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.HasIndex("CategoryID");

                    b.HasIndex("GameID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CategoryID = "in",
                            CountryName = "Sweden",
                            FlagImage = "Sweden.png",
                            GameID = "win",
                            Sport = "Curling"
                        },
                        new
                        {
                            CountryId = 2,
                            CategoryID = "in",
                            CountryName = "Canada",
                            FlagImage = "Canada.png",
                            GameID = "win",
                            Sport = "Curling"
                        },
                        new
                        {
                            CountryId = 3,
                            CategoryID = "in",
                            CountryName = "Great Britain",
                            FlagImage = "GreatBritain.png",
                            GameID = "win",
                            Sport = "Curling"
                        },
                        new
                        {
                            CountryId = 4,
                            CategoryID = "out",
                            CountryName = "Jamaica",
                            FlagImage = "Jamaica.png",
                            GameID = "win",
                            Sport = "Bobsleigh"
                        },
                        new
                        {
                            CountryId = 5,
                            CategoryID = "out",
                            CountryName = "Italy",
                            FlagImage = "Italy.png",
                            GameID = "win",
                            Sport = "Bobsleigh"
                        },
                        new
                        {
                            CountryId = 6,
                            CategoryID = "out",
                            CountryName = "Japan",
                            FlagImage = "Japan.png",
                            GameID = "win",
                            Sport = "Bobsleigh"
                        },
                        new
                        {
                            CountryId = 7,
                            CategoryID = "in",
                            CountryName = "Germany",
                            FlagImage = "Germany.png",
                            GameID = "sum",
                            Sport = "Diving"
                        },
                        new
                        {
                            CountryId = 8,
                            CategoryID = "in",
                            CountryName = "China",
                            FlagImage = "China.png",
                            GameID = "sum",
                            Sport = "Diving"
                        },
                        new
                        {
                            CountryId = 9,
                            CategoryID = "in",
                            CountryName = "Mexico",
                            FlagImage = "Mexico.png",
                            GameID = "sum",
                            Sport = "Diving"
                        },
                        new
                        {
                            CountryId = 10,
                            CategoryID = "out",
                            CountryName = "Brazil",
                            FlagImage = "Brazil.png",
                            GameID = "sum",
                            Sport = "Road Cycling"
                        },
                        new
                        {
                            CountryId = 11,
                            CategoryID = "out",
                            CountryName = "Netherlands",
                            FlagImage = "Netherlands.png",
                            GameID = "sum",
                            Sport = "Road Cycling"
                        },
                        new
                        {
                            CountryId = 12,
                            CategoryID = "out",
                            CountryName = "USA",
                            FlagImage = "USA.png",
                            GameID = "sum",
                            Sport = "Road Cycling"
                        },
                        new
                        {
                            CountryId = 13,
                            CategoryID = "in",
                            CountryName = "Thailand",
                            FlagImage = "Thailand.png",
                            GameID = "par",
                            Sport = "Archery"
                        },
                        new
                        {
                            CountryId = 14,
                            CategoryID = "in",
                            CountryName = "Uruguay",
                            FlagImage = "Uruguay.png",
                            GameID = "par",
                            Sport = "Archery"
                        },
                        new
                        {
                            CountryId = 15,
                            CategoryID = "in",
                            CountryName = "Ukraine",
                            FlagImage = "Ukraine.png",
                            GameID = "par",
                            Sport = "Archery"
                        },
                        new
                        {
                            CountryId = 16,
                            CategoryID = "out",
                            CountryName = "Austria",
                            FlagImage = "Austria.png",
                            GameID = "par",
                            Sport = "Canoe Sprint"
                        },
                        new
                        {
                            CountryId = 17,
                            CategoryID = "out",
                            CountryName = "Pakistan",
                            FlagImage = "Pakistan.png",
                            GameID = "par",
                            Sport = "Canoe Sprint"
                        },
                        new
                        {
                            CountryId = 18,
                            CategoryID = "out",
                            CountryName = "Zimbabwe",
                            FlagImage = "Zimbabwe.png",
                            GameID = "par",
                            Sport = "Canoe Sprint"
                        },
                        new
                        {
                            CountryId = 19,
                            CategoryID = "in",
                            CountryName = "France",
                            FlagImage = "France.png",
                            GameID = "yth",
                            Sport = "Break Dancing"
                        },
                        new
                        {
                            CountryId = 20,
                            CategoryID = "in",
                            CountryName = "Cyprus",
                            FlagImage = "Cyprus.png",
                            GameID = "yth",
                            Sport = "Break Dancing"
                        },
                        new
                        {
                            CountryId = 21,
                            CategoryID = "out",
                            CountryName = "Russia",
                            FlagImage = "Russia.png",
                            GameID = "yth",
                            Sport = "Break Dancing"
                        },
                        new
                        {
                            CountryId = 22,
                            CategoryID = "out",
                            CountryName = "Finland",
                            FlagImage = "Finland.png",
                            GameID = "yth",
                            Sport = "Skateboarding"
                        },
                        new
                        {
                            CountryId = 23,
                            CategoryID = "out",
                            CountryName = "Slovakia",
                            FlagImage = "Slovakia.png",
                            GameID = "yth",
                            Sport = "Skateboarding"
                        },
                        new
                        {
                            CountryId = 24,
                            CategoryID = "out",
                            CountryName = "Portugal",
                            FlagImage = "Portugal.png",
                            GameID = "yth",
                            Sport = "Skateboarding"
                        });
                });

            modelBuilder.Entity("OlympicGamesChristensen.Models.Game", b =>
                {
                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = "win",
                            GameName = "Winter Olympics"
                        },
                        new
                        {
                            GameId = "sum",
                            GameName = "Summer Olympics"
                        },
                        new
                        {
                            GameId = "par",
                            GameName = "Paralympic Olympics"
                        },
                        new
                        {
                            GameId = "yth",
                            GameName = "Youth Olympics"
                        });
                });

            modelBuilder.Entity("OlympicGamesChristensen.Models.Country", b =>
                {
                    b.HasOne("OlympicGamesChristensen.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlympicGamesChristensen.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
